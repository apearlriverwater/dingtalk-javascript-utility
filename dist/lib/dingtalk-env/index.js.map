{"version":3,"sources":["../../../package/dingtalk-env/index.js"],"names":["getEnv","containerEnv","weex","config","env","platform","bundleFrameworkType","dingtalk","bundleUrl","originalUrl","appVersion","appName","href","location","tpl","parse","_wx_tpl","callNative","navigator","__weex_options__","isWeb","isWeexiOS","isWeexAndroid","isWeex","UA","window","userAgent","toLowerCase","isDingtalk","dingtalkContainer","indexOf","webAndroid","webiOS","test","fetchVersion","matches","match","version","isWebiOS","isWebAndroid","toPlatform"],"mappings":"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","file":"index.js","sourcesContent":["import url from '../dingtalk-url';\n\nfunction getEnv(){\n  let containerEnv = {};\n  if (typeof weex !== 'undefined'){\n    const config = weex.config;\n    const env = config.env;\n    containerEnv.platform = env.platform;\n    containerEnv.bundleFrameworkType = 'Vue';\n    if (containerEnv.platform !== 'Web'){\n      containerEnv.dingtalk = {\n        bundleUrl: config.bundleUrl,\n        originalUrl: config.originalUrl\n      };\n      containerEnv.appVersion = env.appVersion;\n      containerEnv.appName = env.appName;\n    } else {\n      // Vue Web\n      const href = location.href;\n      const tpl = url.parse(href,'dd_wx_tpl');\n      const _wx_tpl = url.parse(href,'_wx_tpl');\n      containerEnv.dingtalk = {\n        bundleUrl: tpl ? tpl : _wx_tpl ? _wx_tpl : '',\n        originalUrl: href\n      }\n    }\n  } else {\n    // Rax Weex\n    if (typeof callNative === 'function'){\n      containerEnv.platform = navigator.platform;\n      containerEnv.appName = navigator.appName;\n      containerEnv.appVersion = navigator.appVersion;\n      containerEnv.dingtalk = {\n        bundleUrl: __weex_options__.bundleUrl,\n        originalUrl: __weex_options__.originalUrl\n      };\n    } else {\n      // Rax Web\n      containerEnv.platform = 'Web';\n      const href = location.href;\n      const tpl = url.parse(href,'dd_wx_tpl');\n      const _wx_tpl = url.parse(href,'_wx_tpl');\n      containerEnv.dingtalk = {\n        bundleUrl: tpl ? tpl : _wx_tpl ? _wx_tpl : '',\n        originalUrl: href\n      }\n    }\n    containerEnv.bundleFrameworkType = 'Rax';\n  }\n  return containerEnv;\n}\n\nconst env = getEnv();\nconst isWeb = env.platform === 'Web';\nconst isWeexiOS = env.platform === 'iOS';\nconst isWeexAndroid = env.platform === 'android';\nconst isWeex = isWeexiOS || isWeexAndroid;\nconst { dingtalk, bundleFrameworkType } = env;\nconst { bundleUrl, originalUrl } = dingtalk;\n\nlet UA;\nif(isWeb){\n  UA = window.navigator.userAgent.toLowerCase();\n}\n\nconst isDingtalk = dingtalkContainer();\n\nfunction dingtalkContainer(){\n  if (isWeex){\n    if (env.appName === 'DingTalk' || env.appName === 'com.alibaba.android.rimet'){\n      return true;\n    }\n    return false;\n  } else {\n    return UA && UA.indexOf('dingtalk') > -1;\n  }\n}\n\nfunction webAndroid(){\n  if (isWeb){\n    return UA && UA.indexOf('android') > -1;\n  }\n  return null;\n}\n\nfunction webiOS(){\n  if (isWeb){\n    return UA && /iphone|ipad|ipod|ios/.test(UA);\n  }\n  return null;\n}\n\nfunction fetchVersion(){\n  if (isWeb){\n    let matches = UA.match(/aliapp\\(\\w+\\/([a-zA-Z0-9.-]+)\\)/);\n    if (matches === null) {\n        matches = UA.match(/dingtalk\\/([a-zA-Z0-9.-]+)/);\n    }\n    let version = matches && matches[1];\n    return version;\n  } else {\n    return env.appVersion;\n  }\n}\n\nconst isWebiOS = webiOS();\nconst isWebAndroid = webAndroid();\nconst version = fetchVersion();\n\nfunction toPlatform(){\n  let platform;\n  if(isDingtalk){\n    if (isWebAndroid){\n      platform = 'web.android';\n    } else if (isWebiOS) {\n      platform = 'web.ios';\n    } else if (isWeexAndroid){\n      platform = 'weex.android';\n    } else if (isWeexiOS){\n      platform = 'weex.ios';\n    }\n  } else {\n    platform = 'not.dingtalk'\n  }\n  return platform;\n}\n\nexport default {\n  isDingtalk,\n  isWeb,\n  isWebiOS,\n  isWebAndroid,\n  isWeex,\n  isWeexiOS,\n  isWeexAndroid,\n  bundleFrameworkType,\n  bundleUrl,\n  originalUrl,\n  version,\n  platform: toPlatform()\n};\n"]}