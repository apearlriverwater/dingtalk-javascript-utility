{"version":3,"file":"journey-min.js","sources":["../package/dingtalk-querystring/index.js","../package/dingtalk-url/index.js","../package/dingtalk-env/index.js","../package/dingtalk-version/index.js","../package/dingtalk-require/index.js","../package/dingtalk-document/index.js","../package/dingtalk-timer/index.js"],"sourcesContent":["\nfunction parse(qs, sep, eq){\n  const obj = Object.create(null);\n  if (typeof qs !== 'string' || qs.length === 0 ){\n    return obj;\n  }\n  sep = sep || '&';\n  eq = eq || '=';\n  const params = qs.split(sep);\n  let i = 0;\n  let l = params.length;\n  for(;i<l;i++){\n    let items = params[i].split(eq);\n    let queryKey = items[0].trim();\n    let queryVal = items[1].trim();\n    let cur = obj[queryKey];\n    if (cur){\n      if (Array.isArray(cur)){\n        cur.push(queryVal);\n      } else {\n        let temp = cur;\n        obj[queryKey] = new Array();\n        obj[queryKey].push(temp);\n        obj[queryKey].push(queryVal);\n      }\n    } else {\n      obj[queryKey] = queryVal;\n    }\n  }\n  return obj;\n}\n\nfunction stringify(obj, sep, eq){\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj !== null && typeof obj === 'object'){\n    const keys = Object.keys(obj);\n    const len = keys.length;\n    const flast = len - 1;\n    let fields = '';\n    let i = 0;\n    for (;i<len; i++){\n      let k = keys[i];\n      let v = obj[k];\n      let ks = k + eq;\n      if (Array.isArray(v)){\n        let vlen = v.length;\n        let vlast = vlen - 1;\n        let j = 0;\n        for (; j < vlen; ++j) {\n           fields += ks + v[j];\n           if (j < vlast){\n             fields += sep;\n           }\n        }\n        if (vlen && i < flast){\n          fields += sep;\n        }\n      } else {\n        fields += ks + v;\n        if (i < flast){\n          fields += sep;\n        }\n      }\n    }\n    return fields;\n  }\n  return '';\n}\n\nexport default {\n  stringify,\n  parse\n};\n","import querystring from 'dingtalk-querystring';\n\nfunction format(url, query){\n  let search = querystring.stringify(query);\n  return url + '?' + search;\n}\n\nfunction parse(url,parseQueryString){\n  const searchIndex = url.indexOf('?');\n  if (searchIndex === -1){\n    return null;\n  }\n  const searchString = url.slice(searchIndex + 1);\n  const query = querystring.parse(searchString);\n  if (typeof parseQueryString === 'string' && parseQueryString.length > 0){\n    return query[parseQueryString];\n  } else {\n    return query;\n  }\n}\n\nexport default {\n  format,\n  parse\n}\n","import url from 'dingtalk-url';\n\nfunction whatEnv(){\n  /*\n    env Object ======= !!!!\n\n    platform,\n    bundleFrameworkType,\n    dingtalk {\n     bundleUrl,\n     originalUrl\n    }\n    appName\n\n   */\n  let weexEnv = {};\n  if (typeof weex !== 'undefined'){\n    const config = weex.config;\n    const env = config.env;\n    weexEnv.platform = env.platform;\n    weexEnv.bundleFrameworkType = 'Vue';\n    if (weexEnv.platform !== 'Web'){\n      weexEnv.dingtalk = {\n        bundleUrl: config.bundleUrl,\n        originalUrl: config.originalUrl\n      };\n      weexEnv.appName = env.appName;\n    } else {\n      // Vue Web\n      const href = location.href;\n      const tpl = url.parse(href,'dd_wx_tpl');\n      weexEnv.dingtalk = {\n        bundleUrl: tpl ? tpl : url.parse(href,'_wx_tpl'),\n        originalUrl: href\n      }\n    }\n  } else {\n    // Rax Weex\n    if (typeof callNative === 'function'){\n      weexEnv.platform = navigator.platform;\n      weexEnv.appName = navigator.appName;\n    } else {\n      // Rax Web\n      weexEnv.platform = 'Web';\n      const href = location.href;\n      const tpl = url.parse(href,'dd_wx_tpl');\n      weexEnv.dingtalk = {\n        bundleUrl: tpl ? tpl : url.parse(href,'_wx_tpl'),\n        originalUrl: href\n      }\n    }\n    weexEnv.bundleFrameworkType = 'Rax';\n  }\n  return weexEnv;\n}\n\nconst env = whatEnv();\nconst isiOS = env.platform === 'iOS';\nconst isAndroid = env.platform === 'Android';\nconst isWeb = env.platform === 'Web';\nconst isWeex = isiOS || isAndroid;\nconst { dingtalk, bundleFrameworkType } = env;\nconst { bundleUrl, originalUrl } = dingtalk;\nconst isDingtalk = dingtalkContainer();\n\nfunction dingtalkContainer(){\n  if (isWeex){\n    return env.appName === 'DingTalk';\n  } else {\n    return /DingTalk/.test(navigator.userAgent)\n  }\n}\n\nexport default {\n  isiOS,\n  isAndroid,\n  isDingtalk,\n  isWeb,\n  isWeex,\n  bundleFrameworkType,\n  bundleUrl,\n  originalUrl\n};\n","\nexport default function compareVersion (oldVersion, newVersion, containEqual){\n  if (typeof oldVersion !== 'string' || typeof newVersion !== 'string') {\n    return false;\n  }\n  //分割字符串为['1', '0', '1']格式\n  let oldArray = oldVersion.split('.');\n  let newArray = newVersion.split('.');\n  let o;\n  let n;\n  do {\n    o = oldArray.shift();\n    n = newArray.shift();\n  } while (o === n && newArray.length > 0);\n  if (containEqual) {\n    return (n | 0) >= (o | 0);\n  } else {\n    return (n | 0) > (o | 0);\n  }\n}\n","import env from 'dingtalk-env';\n\nconst { bundleFrameworkType } = env;\n\nexport default function requireModule(name){\n  if (bundleFrameworkType === 'Vue'){\n    return weex.requireModule(name);\n  } else {\n    let moduleName = '@weex-module/' + name;\n    return __weex_require__(moduleName);\n  }\n}\n","import env from 'dingtalk-env';\n\nconst { bundleFrameworkType, isWeex} = env;\n\nfunction Document(){\n  if ( isWeex && bundleFrameworkType === 'Vue'){\n    return weex.document;\n  } else {\n    return document;\n  }\n}\n\nconst doc = Document();\n\nexport default doc;\n","import requireModule from 'dingtalk-require';\nimport document from 'dingtalk-document';\nimport env from 'dingtalk-env';\n\nconst timer = requireModule('timer');\nconst { isWeex } = env;\n\nfunction setTimeout(handler,time){\n  if (isWeex){\n    timer.setTimeout(handler,time);\n    return document.taskCenter.callbackManager.lastCallbackId.toString();\n  } else {\n    return window.setTimeout(handler,time);\n  }\n}\n\nfunction clearTimeout(n){\n  if (isWeex){\n    timer.clearTimeout(n);\n  } else {\n    window.clearTimeout(n);\n  }\n}\n\nfunction setInterval(handler,time){\n  if (isWeex){\n    timer.setInterval(handler,time);\n    return document.taskCenter.callbackManager.lastCallbackId.toString();\n  } else {\n    return window.setInterval(handler,time);\n  }\n}\n\nfunction clearInterva(n){\n  if (isWeex){\n    timer.clearInterva(n);\n  } else {\n    window.clearInterva(n);\n  }\n}\n\nexport default {\n  setTimeout,\n  clearTimeout,\n  setInterval,\n  clearInterva\n};\n"],"names":["parse","qs","sep","eq","obj","Object","create","length","params","split","i","l","items","queryKey","trim","queryVal","cur","Array","isArray","push","temp","stringify","keys","len","flast","fields","k","v","ks","vlen","vlast","j","format","url","query","querystring","parseQueryString","searchIndex","indexOf","searchString","slice","whatEnv","weexEnv","weex","config","env","platform","bundleFrameworkType","dingtalk","bundleUrl","originalUrl","appName","href","location","tpl","callNative","navigator","dingtalkContainer","isWeex","test","userAgent","compareVersion","oldVersion","newVersion","containEqual","oldArray","newArray","o","n","shift","requireModule","name","moduleName","__weex_require__","Document","document","setTimeout","handler","time","taskCenter","callbackManager","lastCallbackId","toString","window","clearTimeout","setInterval","clearInterva","isiOS","isAndroid","isWeb","isDingtalk","doc","timer"],"mappings":"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"}