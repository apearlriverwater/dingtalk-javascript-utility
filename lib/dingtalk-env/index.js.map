{"version":3,"sources":["../../src/dingtalk-env/index.js"],"names":["maybeInWebView","window","maybeInWeexVueEnv","weex","maybeInNative","callNative","log","LogType","snifferWeexRaxMap","snifferWebViewMap","snifferWeexVueMap","RUNTIME","WEB","WEEX","UNKNOWN","PLATFORM","MAC","WINDOWS","IOS","ANDROID","IPAD","FRAMEWORK","VUE","RAX","snifferMachine","snifferMap","source","j","length","i","result","whichOneRuntime","split","runtime","framework","getEnv","containerEnv","env","config","platform","appVersion","appName","navigator","WARNING","isWeb","isWeexiOS","isWeexAndroid","isWeex","ua","userAgent","getPcConf","tempConf","frameName","name","frameConf","JSON","parse","containerId","version","hostVersion","language","e","stringify","UA","pcConf","dingTalkContainer","indexOf","pdContainer","fetchVersion","matches","match","isWebiOS","test","isWebAndroid","isDingtalk","isPCMac","isPCWindows","isPC"],"mappings":"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","file":"index.js","sourcesContent":["import url from '../dingtalk-url';\nimport logger from '../dingtalk-log';\n\nconst maybeInWebView = typeof window !== 'undefined';\nconst maybeInWeexVueEnv = typeof weex !== 'undefined';\nconst maybeInNative = typeof callNative !== 'undefined';\nconst { log, LogType } = logger;\n\nconst snifferWeexRaxMap = [\n  '__weex_config__',\n  '__weex_options__',\n  '__weex_require__'\n];\n\nconst snifferWebViewMap = [\n  'localStorage',\n  'location',\n  'navigator',\n  'XMLHttpRequest'\n];\n\nconst snifferWeexVueMap = [\n  'config',\n  'requireModule',\n  'document'\n];\n\nexport const RUNTIME = {\n  WEB: 'Web',\n  WEEX: 'Weex',\n  UNKNOWN: 'Unknown'\n}\n\nexport const PLATFORM = {\n  MAC: 'Mac',\n  WINDOWS: 'Windows',\n  IOS: 'iOS',\n  ANDROID: 'Android',\n  IPAD: 'iPad'\n}\n\nexport const FRAMEWORK = {\n  VUE: 'Vue',\n  RAX: 'Rax',\n  UNKNOWN: 'Unknown'\n};\n\nfunction snifferMachine(snifferMap,source){\n  const j = snifferMap.length;\n  let i = 0;\n  let result = true;\n  for(;i < j; i++){\n    if (!source[snifferMap[i]]){\n      result = false;\n      break;\n    }\n  }\n  return result;\n}\n\nfunction whichOneRuntime(){\n  if (maybeInWebView && maybeInWeexVueEnv){\n    // webview\n    return snifferMachine(snifferWeexVueMap,weex) ? 'Web.Vue' : 'Web.Unknown';\n  } else if (!maybeInWebView && maybeInWeexVueEnv){\n    // native\n    return snifferMachine(snifferWeexVueMap,weex) ? 'Weex.Vue' : 'Weex.Unknown';\n  } else if (maybeInWebView && maybeInNative && !maybeInWeexVueEnv){\n    // native\n    return snifferMachine(snifferWeexRaxMap,window) ? 'Weex.Rax' : 'Weex.Unknown';\n  } else {\n    // default webview\n    if (maybeInWebView){\n      return snifferMachine(snifferWebViewMap,window) ? 'Web.Unknown' : 'Unknown.Unknown';\n    } \n  }\n  return 'Unknown.Unknown';\n}\n\nconst [ runtime, framework ] = whichOneRuntime().split('.');\n\nfunction getEnv(){\n  let containerEnv = {};\n  switch (framework){\n    case FRAMEWORK.VUE:\n        const env = config.env;\n        containerEnv.platform = env.platform;\n        if (RUNTIME.WEEX === runtime){\n          containerEnv.appVersion = env.appVersion;\n          containerEnv.appName = env.appName;\n        }\n      break;\n    case FRAMEWORK.RAX:\n        if (RUNTIME.WEEX === runtime) {\n          containerEnv.platform = navigator.platform;\n          containerEnv.appName = navigator.appName;\n          containerEnv.appVersion = navigator.appVersion;\n        }\n      break;\n    case FRAMEWORK.UNKNOWN:\n        if (RUNTIME.WEB === runtime){\n          containerEnv.platform = RUNTIME.WEB;\n        }\n        if (RUNTIME.UNKNOWN === runtime){\n          log(['current runtime environment is unknown, please checking.'],LogType.WARNING);\n          containerEnv.platform = RUNTIME.UNKNOWN;\n        }        \n      break;\n  }  \n  return containerEnv;\n}\n\nconst env = getEnv();\nconst isWeb = env.platform === 'Web';\nconst isWeexiOS = env.platform === 'iOS';\nconst isWeexAndroid = env.platform === 'android';\nconst isWeex = isWeexAndroid && isWeexiOS;\n\nfunction ua(){\n  if(isWeb){\n    return window.navigator.userAgent;\n  }\n  return '';\n}\n\nfunction getPcConf(){\n  let tempConf = {}\n  if(isWeb){\n    const frameName = window.name;\n    try{\n      const frameConf = JSON.parse(frameName);\n      tempConf.containerId = frameConf.containerId;\n      tempConf.version = frameConf.hostVersion;\n      tempConf.language = frameConf.language || '*';\n    }catch(e){\n      log([JSON.stringify(e)],LogType.WARNING);\n    }\n  }\n  return tempConf;\n}\n\nconst UA = ua();\nconst pcConf = getPcConf();\n\nfunction dingTalkContainer(){\n  if (isWeex){\n    if (env.appName === 'DingTalk' || env.appName === 'com.alibaba.android.rimet'){\n      return true;\n    }\n    return false;\n  } else {\n    return UA.indexOf('dingtalk') > -1 || UA.indexOf('aliapp') > -1 || UA.indexOf('dingtalk-win') > -1;\n  }\n}\n\nfunction pdContainer(){\n  if (isWeb){\n    return !!pcConf.containerId\n  }\n  return false;\n}\n\nfunction fetchVersion(){\n  if (isWeb){\n    if (pcConf.version){\n      return pcConf.version;\n    } else {\n      let matches = UA.match(/aliapp\\(\\w+\\/([a-zA-Z0-9.-]+)\\)/);\n      if (matches === null) {\n          matches = UA.match(/dingtalk\\/([a-zA-Z0-9.-]+)/);\n      }\n      let version = (matches && matches[1]) || 'Unknown';\n      return version;\n    }\n  } else {\n    return env.appVersion;\n  }\n}\n\nconst isWebiOS = /iphone|ipad|ipod|ios/.test(UA);\nconst isWebAndroid = UA.indexOf('android') > -1;\nconst version = fetchVersion();\nconst isDingtalk = dingTalkContainer();\nconst isPCMac = UA.indexOf('mac') > -1;\nconst isPCWindows = UA.indexOf('win') > -1;\nconst isPC = pdContainer();\n\nexport default {\n  isDingtalk,\n  isWebiOS,\n  isWebAndroid,\n  isWeexiOS,\n  isWeexAndroid,\n  version,\n  runtime,\n  framework,\n  platform: ''\n};\n"]}